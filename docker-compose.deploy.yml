# docker-compose.deploy.yml
version: '3.8'

volumes:
  userdb_vol:
  projectdb_vol:
  ticketdb_vol:

networks:
  micro_network:
    external:
      name: micro_network

services:
  user-api:
    container_name: cuser-service
    build:
      context: ../user-service
    ports:
    - "5001:5001"
    depends_on:
      - user-db
    networks:
      - micro_network
    restart: always

  user-db:
    container_name: cuser_dbase
    image: mysql:8
    ports:
    - "32000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user-prod
      MYSQL_USER: projectmanager
      MYSQL_PASSWORD: project_manager
    networks:
      - micro_network
    volumes:
    - userdb_vol:/var/lib/mysql

  project-api:
    container_name: cproject-service
    build:
      context: ../project-service
    ports:
      - "5002:5002"
    depends_on:
      - project-db
    networks:
      - micro_network
    restart: always

  project-db:
    container_name: cproject_dbase
    image: mysql:8
    ports:
      - "32001:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: project-prod
      MYSQL_USER: projectmanager
      MYSQL_PASSWORD: project_manager
    networks:
      - micro_network
    volumes:
        - projectdb_vol:/var/lib/mysql

  ticket-api:
    container_name: cticket-service
    build:
      context: ../ticket-service
    ports:
      - "5003:5003"
    depends_on:
      - ticket-db
    networks:
      - micro_network
    restart: always

  ticket-db:
    container_name: cticket_dbase
    image: mysql:8
    ports:
      - "32002:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ticket-prod
      MYSQL_USER: projectmanager
      MYSQL_PASSWORD: project_manager
    networks:
      - micro_network
    volumes:
      - ticketdb_vol:/var/lib/mysql

  frontend-app:
    container_name: cfrontend-app
    build:
      context: ../client
    volumes:
      - '../client'
      - '../client/node_modules'
    ports:
      - "3000:3000"
    networks:
      - micro_network
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always